M=nrand
rnorm
matrix(rnorm(30*3), 30,3)
m=matrix(rnorm(30*3), 30,3)
plot(m)
m=matrix(rnorm(100*3), 100,3)
plot(m)
m=matrix(rnorm(100*2), 100,2)
m
plot(m)
ss=svd(m)
ss
ss$v
lines(c(0,ss$v[1,1]), c(1, ss$v[1,2]))
lines(c(0,ss$v[1,1]), c(1, ss$v[2,1]))
lines(c(0,ss$v[1,1]), c(0, ss$v[2,1]))
lines(c(0,ss$v[1,2]), c(0, ss$v[2,2]))
ss$v %*% ss$v
ss$v %*% t(ss$v)
plot(m)
lines(c(0,ss$v[1,1]), c(0, ss$v[2,1]))
lines(c(0,ss$v[1,2]), c(0, ss$v[2,2]))
lines(c(0,ss$v[1,1]), c(0, ss$v[1,2]), col='r')
lines(c(0,ss$v[1,1]), c(0, ss$v[1,2]), col='red')
lines(c(0,ss$v[2,1]), c(0, ss$v[2,2]), col='red')
plot(m, asp=1)
lines(c(0,ss$v[1,1]), c(0, ss$v[1,2]), col='red')
lines(c(0,ss$v[2,1]), c(0, ss$v[2,2]), col='red')
lines(c(0,ss$v[1,1]), c(0, ss$v[2,1]))
lines(c(0,ss$v[1,2]), c(0, ss$v[2,2]))
ss$u
ss$u[1,:] %*% ss$d[1] %*% t(ss$v[:,1])
ss$u[1,] %*% ss$d[1] %*% t(ss$v[,1])
ss$u[,1] %*% ss$d[1] %*% t(ss$v[,1])
ss$u[,1] %*% diag(ss$d[1]) %*% t(ss$v[,1])
ss$u[,1]
ss$u[,1]
ss$u[,1,simplified=-F]
ss$u[,1,simplified=F]
ss$u[,1]
help(`[``)
help(`[`)
help(`[`)
ss$u[,1,drop=F]
ss$u[,1,drop=F] %*% diag(ss$d[1]) %*% t(ss$v[,1, drop=F])
ss$d
ss$u[,1,drop=F] %*% %*% t(ss$v[,1, drop=F])
ss$u[,1,drop=F] %*% t(ss$v[,1, drop=F])
ss$u[,1,drop=F] %*% ss$d[1] %*% t(ss$v[,1, drop=F])
p=ss$u[,1,drop=F] %*% ss$d[1] %*% t(ss$v[,1, drop=F])
plot(p)
points(m)
help(lines)
lines(c(p[,1], m[,1]), c(p[,2], m[,2]))
help(lines)
points(m)
plot(p)
points(m)
lines(p, m)
m
lines(c(p[,1],p[,2]), c(m[,1], m[,2]))
lines(c(p[,1],m[,1]), c(p[,2], m[,2]))
plot(c(p[,1],m[,1]), c(p[,2], m[,2]))
lines(c(p[,1],m[,1]), c(p[,2], m[,2]))
plot(p);lines(m)
plot(p);points(m)
lines(p[1,], m[1,])
lines(m[1,], p[1,])
lines(c(p[1,1], m[1,1]), p[1,2], m[1,2])
lines(c(p[1,1], m[1,1]), c(p[1,2], m[1,2]))
lapply(seq_along(nrow(p)), function(x){lines(c(p[x,1], m[x,1]), c(p[x,2], m[x,2])})
lapply(seq_along(nrow(p)), function(x){lines(c(p[x,1], m[x,1]), c(p[x,2], m[x,2]))})
seq_along(3)
lapply(seq(nrow(p)), function(x){lines(c(p[x,1], m[x,1]), c(p[x,2], m[x,2]))})
plot(p);points(m)
lapply(seq(nrow(p)), function(x){a<-lines(c(p[x,1], m[x,1]), c(p[x,2], m[x,2]))})
lapply(seq(nrow(p)), function(x){a<-lines(c(p[x,1], m[x,1]), c(p[x,2], m[x,2]));invisible(a)})
b<-lapply(seq(nrow(p)), function(x){a<-lines(c(p[x,1], m[x,1]), c(p[x,2], m[x,2]));invisible(a)})
x=seq(-2,2,0.1)
y1=sin(x)
plot(x)
plot(y)
plot(y1)
x=seq(-6,6,0.1)
plot(y1)
y1=sin(x)
plot(y1)
y2=sin(x-pi/2)
points(y2)
plot(y1, y2)
cor(y1, y2)
y3=sin(x-pi)
plot(y3)
points(y1)
plot(y1, y2)
plot(y1, y3)
y4=cos(x)
y1^2+y4^2
plot(y1,y4)
plot(y4, y2)
plot(y4)
points(y2)
points(y3)
plot(sin(x), sin(pi/2-x))
plot(x, sin(x), sin(pi/2-x))
plot(x, sin(x))
lines(x, sin(pi/2-x))
plot(y1)
points(y2)
cor(y1, y2)
dev.new()
plot(y1, y2)
install.packages("knitr")
require(knitr)
install.packages("knitr")
require(rgl)
require(shiny)
install.packages("shiny")
require(mgcv)
dat = gamSim(1, n=400, dist="normal, scale=2")
dat = gamSim(1, n=400, dist="normal", scale=2)
dat
ndim(dat)
ndims(dat)
dims(dat)
ncol(dat)
nrow(dat)
head(dat)
b=gam(y~s(x0)+s(x1)+s(x2)+s(x3))
b=gam(y~s(x0)+s(x1)+s(x2)+s(x3), data=dat)
b
plot(b)
gam.check(b)
summary(b)
knitr::opts_chunk$set(echo = TRUE)
sample(c("鄭","丁", "楊", "徐", "林"))
sample(c("鄭","丁", "楊", "徐", "林"), n=1)
sample(c("鄭","丁", "楊", "徐", "林"), size=1)
sample(c("鄭","丁", "楊", "徐", "林"), size=1)
sample(c("鄭","丁", "楊", "徐", "林"), size=1)
sample(c("鄭","丁", "楊", "徐", "林"), size=1)
sample(c("鄭","丁", "楊", "徐", "林"), size=1)
sample(c("鄭","丁", "楊", "徐", "林"), size=1)
knitr::opts_chunk$set(echo = TRUE)
sample(c("鄭","丁", "楊", "徐", "林"), size=1)
pnorm(0, 0, 10)
pnorm(5, 5, 10)
pnorm(10, 5, 10)
pnorm(0, 5, 10)
qnorm(0.6826895, 5, 10)
qnorm(0.6826895/2, 5, 10)
qnorm(0.3173105/2, 5, 10)
a<-5; b<-10; pnorm(a+b, 5, 10, lower.tail=F) + pnorm(a-b, 5, 10, lower.tail=T)
mu<-1; sigm1 <- 2; a<-3; b<-4; pnorm(a+b, mu, sigma, lower.tail=F) + pnorm(a-b, mu, sigma, lower.tail=T)
mu<-1; sigma<- 2; a<-3; b<-4; pnorm(a+b, mu, sigma, lower.tail=F) + pnorm(a-b, mu, sigma, lower.tail=T)
help(c)
??c
?c
?rnorm
histogram(rnorm(10000, 0, 1))
hist(rnorm(10000, 0, 1))
norm_samples = rnorm(10000, 0, 1)
norm_samples
norm_samples = rnorm(10000, 0, 1)
norm_samples = rnorm(10, 0, 1)
hist(norm_samples)
hist(rnorm(50, 0, 1))
plot(rnorm(50, 0, 1))
plot(rnorm(500, 0, 1))
plot(rnorm(1000, 0, 1))
plot(rnorm(1e4, 0, 1))
plot(rnorm(1e5, 0, 1))
plot(rnorm(1e100, 0, 1))
plot(rnorm(1e10, 0, 1))
1e10*4/1024/1024/1024
dev.off()
a <- 1
?norm
?rnoem
?rnorm
dnorm(1)
xx = c(-3:0.1:3)
xx = seq(-3,3,0.1)
xx
plot(xx, dnorm(xx))
dnorm(1)
plot(xx, pnorm(xx))
knitr::opts_chunk$set(echo = TRUE)
mu<-1; sigma<- 2;
a<-3; b<-4;
pnorm(a+b, mu, sigma, lower.tail=F) + pnorm(a-b, mu, sigma, lower.tail=T)
mu<-5; sigma<- 10;
a<-5; b<-10;
pnorm(a+b, mu, sigma, lower.tail=F) + pnorm(a-b, mu, sigma, lower.tail=T)
setwd("e:/langon/wasp")
require(tidyverse)
loadJSON
require(jsonlite)
fromJSON("data/all_questions_with_ratings.json")
ratings = fromJSON("data/all_questions_with_ratings.json")
names(ratings)
ratings$options
ratings[1,:]
ratings[1,]
type(ratings)
class(ratings)
